Description: >
  This CloudFormation template deploys a full CI/CD pipeline for all project resources.

Parameters:
  Email:
    Description: The email address where to send notifications
    Default: yauhen.volkau@gmail.com
    Type: String

  GitHubOAuthToken:
    Description: Create a token with 'repo' and 'admin:repo_hook' permissions here https://github.com/settings/tokens
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'

  GitHubUser:
    Description: Enter GitHub username of the repository owner
    Type: String
    Default: User
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepository:
    Description: Enter the repository name that should be monitored for changes
    Type: String
    Default: Prj01-projectresources

  GitHubBranch:
    Description: Enter the GitHub branch to monitored
    Type: String
    Default: master

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: GitHub Configuration
          Parameters:
            - GitHubOAuthToken
            - GitHubUser
            - GitHubRepository
            - GitHubBranch

    ParameterLabels:
      GitHubRepository:
        default: Repository Name
      GitHubUser:
        default: Repository Owner
      GitHubBranch:
        default: Repository Branch
      GitHubOAuthToken:
        default: OAuth2 Token

Resources:
# # SNS Topic
  # CodePipelineSNSTopic:
    # Type: AWS::SNS::Topic
    # Properties:
      # Subscription:
        # - Endpoint: !Ref Email
          # Protocol: email
# S3 Buckets            
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Join [ '-', [ !ImportValue ProjectID, !ImportValue EnvironmentType, 'resources-artifacts'] ]
      
  CleanupArtifactBucketOnDelete:
    Type: Custom::cleanupbucket
    Properties:
      ServiceToken: !ImportValue EmptyS3OnDeleteLambdaARN
      BucketName: !Ref ArtifactBucket            
      
# CodeBuild IAM Role
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Join [ '-', [ !ImportValue ProjectID, !ImportValue EnvironmentType, !Sub '${AWS::Region}', 'CodeBuild', 'resources', 'Role' ] ]
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Policies:
        - PolicyName: !Join [ '-', [ !ImportValue ProjectID, !ImportValue EnvironmentType, !Sub '${AWS::Region}', 'CodeBuild', 'resources', 'Policy' ] ]
          PolicyDocument:
            Statement:
            - Effect: Allow
              Resource: "*"
              Action:
              - iam:PassRole
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - greengrass:*
              - cloudformation:ListExports

            - Effect: Allow
              Resource: !Sub "arn:aws:s3:::*/*"
              Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject            
      
# CodeBuild Project
  PackageCFTemplates:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "PackageCFTemplates", "Resources"] ]
      Description: !Join [ " ", ["Build project for ", !ImportValue ProjectID ] ]
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: buildspec.yaml
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.14.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACT_S3_BUCKET
            Value: !Sub ${ArtifactBucket}
      Artifacts:
        Name: !ImportValue ProjectID
        Type: CODEPIPELINE
        
# CodePipeline IAM Role
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Join [ '-', [ !ImportValue ProjectID, !ImportValue EnvironmentType, !Sub '${AWS::Region}', 'CodePipeline', 'resources', 'Role' ] ]
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
      Policies:
        - PolicyName: !Join [ '-', [ !ImportValue ProjectID, !ImportValue EnvironmentType, !Sub '${AWS::Region}', 'CodePipeline', 'resources', 'Policy' ] ]
          PolicyDocument:
            Statement:
              - Action:
                - s3:GetBucketVersioning
                Resource:
                  - !Join [ "", [ "arn:aws:s3:::", !Ref ArtifactBucket ] ]
                Effect: Allow
              - Action:
                - s3:PutObject
                - s3:GetObject
                - S3:GetObjectVersion
                Resource:
                  - !Join [ "", [ "arn:aws:s3:::", !Ref ArtifactBucket, "/*" ] ]
                Effect: Allow
              - Action:
                - codedeploy:CreateDeployment
                - codedeploy:GetApplicationRevision
                - codedeploy:GetDeployment
                - codedeploy:GetDeploymentConfig
                - codedeploy:RegisterApplicationRevision
                - cloudformation:CreateStack
                - cloudformation:DeleteStack
                - cloudformation:DescribeStacks
                - cloudformation:UpdateStack
                - cloudformation:CreateChangeSet
                - cloudformation:DeleteChangeSet
                - cloudformation:DescribeChangeSet
                - cloudformation:ExecuteChangeSet
                - cloudformation:SetStackPolicy
                - cloudformation:ValidateTemplate
                - iam:PassRole
                - codebuild:BatchGetBuilds
                - codebuild:StartBuild
                - 'sns:Publish'
                - 'lambda:*'
                - 'codebuild:*'
                Resource: "*"
                Effect: Allow

# CodePipeline-CloudFormation IAM Role
  CodePipelineCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Join [ '-', [ !ImportValue ProjectID, !ImportValue EnvironmentType, !Sub '${AWS::Region}', 'CloudFormation', 'resources', 'Role' ] ]
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyName: !Join [ '-', [ !ImportValue ProjectID, !ImportValue EnvironmentType, !Sub '${AWS::Region}', 'CloudFormation', 'resources', 'Policy' ] ]
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: "*"
              Resource: "*"

# CodePipeline          
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, 'projectresources' ] ]
      RoleArn: !Sub ${CodePipelineRole.Arn}
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -  Name: Source
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
        - Name: CodeBuild
          Actions:
            - Name: PackageCFTemplates
              RunOrder: 1
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: Build
              Configuration:
                ProjectName: !Ref PackageCFTemplates          
        - Name: DeployResources
          Actions:
          # S3 Static Website Bucket
            - Name: CreateS3StaticHostingChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Source
                - Name: Build
              OutputArtifacts:
                - Name: CreateS3StaticHostingChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "S3StaticHosting"] ]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "S3StaticHosting"] ]
                TemplatePath: !Sub "Build::s3-static-hosting.yaml"
              RunOrder: 10
            - Name: ExecuteS3StaticHostingChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "S3StaticHosting"] ]
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "S3StaticHosting"] ]
              RunOrder: 11
          # Dynamo Table
            - Name: CreateDynamoChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Source
                - Name: Build
              OutputArtifacts:
                - Name: CreateDynamoChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "dynamo"] ]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "dynamo"] ]
                TemplatePath: !Sub "Build::dynamo.yaml"
              RunOrder: 10
            - Name: ExecuteDynamoChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "dynamo"] ]
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "dynamo"] ]
              RunOrder: 11              
          # AWS Cognito
            - Name: CreateCognitoChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Source
                - Name: Build
              OutputArtifacts:
                - Name: CreateCognitoChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "cognito"] ]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "cognito"] ]
                TemplatePath: !Sub "Build::cognito.yaml"
              RunOrder: 10
            - Name: ExecuteCognitoChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "cognito"] ]
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "cognito"] ]
              RunOrder: 11
          # AWS Lambda
            - Name: CreateLambdaChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Source
                - Name: Build
              OutputArtifacts:
                - Name: CreateLambdaChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "lambda"] ]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "lambda"] ]
                TemplatePath: !Sub "Build::lambda.yaml"
              RunOrder: 12
            - Name: ExecuteLambdaChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "lambda"] ]
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "lambda"] ]
              RunOrder: 13 
          # restApi with Cognito Authorizier
            - Name: CreateRestApiChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Source
                - Name: Build
              OutputArtifacts:
                - Name: CreateRestApiChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApi"] ]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApi"] ]
                TemplatePath: !Sub "Build::restApi.yaml"
              RunOrder: 14
            - Name: ExecuteRestApiChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApi"] ]
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApi"] ]
              RunOrder: 15
          # restApi resources and methods
            - Name: CreateRestApiResourcesChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Source
                - Name: Build
              OutputArtifacts:
                - Name: CreateRestApiResourcesChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApiResources"] ]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApiResources"] ]
                TemplatePath: !Sub "Build::restApiResources.yaml"
              RunOrder: 16
            - Name: ExecuteRestApiResourcesChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApiResources"] ]
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "restApiResources"] ]
              RunOrder: 17              
          # Website integration
            - Name: CreateWebIntegrationChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Source
                - Name: Build
              OutputArtifacts:
                - Name: CreateWebIntegrationChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "webIntegration"] ]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "webIntegration"] ]
                TemplatePath: !Sub "Build::websiteIntegration.yaml"
              RunOrder: 30
            - Name: ExecuteWebIntegrationChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "webIntegration"] ]
                RoleArn: !GetAtt [CodePipelineCloudFormationRole, Arn]
                StackName: !Join [ "-", [ !ImportValue ProjectID, !ImportValue EnvironmentType, "webIntegration"] ]
              RunOrder: 31              